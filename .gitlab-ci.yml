variables:
  MESON_BUILD_DIR: _build
  FLATPAK_MODULE: gnome-usage
  TARBALL_ARTIFACT_PATH: ".flatpak-builder/build/${FLATPAK_MODULE}/_flatpak_build/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"

include:
  - project: "GNOME/citemplates"
    file: "templates/default-rules.yml"
  - project: "GNOME/citemplates"
    file: "flatpak/flatpak_ci_initiative.yml"
  - component: "gitlab.gnome.org/GNOME/citemplates/release-service@master"
    inputs:
      job-stage: deploy
      dist-job-name: flatpak
      tarball-artifact-path: ${TARBALL_ARTIFACT_PATH}

stages:
  - lint
  - build
  - deploy

i18n:
  stage: lint
  script:
    - ./build-aux/test/i18n-strings-check.sh

lint:
  stage: lint
  image: "valalang/lint:latest"
  script:
    - io.elementary.vala-lint src -c build-aux/test/vala-lint.conf

alpine:
  stage: build
  allow_failure: true
  before_script:
    - apk upgrade -a
    - apk add alpine-sdk meson vala libgee-dev gtk4.0-dev libadwaita-dev
              libgtop-dev tinysparql-dev
  image: alpine:latest
  script:
    - meson setup ${MESON_BUILD_DIR}
    - meson compile -C ${MESON_BUILD_DIR}

flatpak:
  stage: build
  extends: '.flatpak'
  variables:
    MANIFEST_PATH: 'org.gnome.Usage.json'
    RUNTIME_REPO: 'https://nightly.gnome.org/gnome-nightly.flatpakrepo'
    FLATPAK_MODULE: 'gnome-usage'
    BUNDLE: "org.gnome.UsageDevel.flatpak"
    APP_ID: 'org.gnome.UsageDevel'

nightly:
  stage: deploy
  extends: '.publish_nightly'
  dependencies: ['flatpak']
  needs: ['flatpak']
